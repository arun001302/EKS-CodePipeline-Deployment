version: 0.2
# Minimal, hardened buildspec for CodeBuild Standard images.
# - No 'runtime-versions' (Docker is preinstalled; enable Privileged in project)
# - Installs Helm explicitly and verifies it's on PATH
# - Logs in to ECR using the registry derived from ECR_REPO
# - Builds, pushes, and deploys with Helm

env:
  variables:
    REGION: "us-east-1"
    CLUSTER_NAME: "java-ci-cd-cluster"
    ECR_REPO: "914261932224.dkr.ecr.us-east-1.amazonaws.com/java-ci-cd-app"

phases:
  install:
    commands:
      - set -euxo pipefail
      - echo "Installing Helm..."
      - curl -L -o helm.tgz https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz
      - tar -xzf helm.tgz
      - install -m 0755 linux-amd64/helm /usr/local/bin/helm
      - which helm
      - helm version
      - echo "PATH=$PATH"

  pre_build:
    commands:
      - set -euxo pipefail
      - echo "== PRE_BUILD =="
      - aws --version || true
      - docker --version
      - echo "ECR_REPO=${ECR_REPO}"
      - REGISTRY=$(echo "${ECR_REPO}" | cut -d'/' -f1)
      - echo "Logging in to ${REGISTRY}..."
      - aws ecr get-login-password --region "${REGION}" | docker login --username AWS --password-stdin "${REGISTRY}"
      - IMAGE_TAG=$(echo "${CODEBUILD_RESOLVED_SOURCE_VERSION:-$(date +%Y%m%d-%H%M%S)}" | cut -c1-7)
      - echo "IMAGE_TAG=${IMAGE_TAG}"

  build:
    commands:
      - set -euxo pipefail
      - echo "== BUILD =="
      - echo "Building ${ECR_REPO}:${IMAGE_TAG}"
      - docker build -t "${ECR_REPO}:${IMAGE_TAG}" .
      - echo "Pushing image..."
      - docker push "${ECR_REPO}:${IMAGE_TAG}"

  post_build:
    commands:
      - set -euxo pipefail
      - echo "== POST_BUILD =="
      - which helm
      - helm version
      - aws eks update-kubeconfig --region "${REGION}" --name "${CLUSTER_NAME}"
      - echo "Deploying with Helm..."
      - helm upgrade --install java-ci-cd-app ./helm           --set image.repository="${ECR_REPO}"           --set image.tag="${IMAGE_TAG}"
